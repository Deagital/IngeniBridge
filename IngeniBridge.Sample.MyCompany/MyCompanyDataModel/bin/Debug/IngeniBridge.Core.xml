<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IngeniBridge.Core</name>
    </assembly>
    <members>
        <member name="T:IngeniBridge.Core.Asset">
            <summary>
            This class represents an asset into an IngeniBridge tree
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Asset.Code">
            <summary>
            The asset code
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Asset.Label">
            <summary>
            The asset label
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Asset.Datas">
            <summary>
            The timed datas associated directly with that asset
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Asset.BeginValidity">
            <summary>
            The begin validity date
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Asset.EndValidity">
            <summary>
            The end validity date
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Asset.ToString">
            <summary>
            Converts to string
            </summary>
            <returns></returns>
        </member>
        <member name="M:IngeniBridge.Core.Asset.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Asset.HistoryTrackingCode">
            <summary>
            Correlation code to track the object history
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Asset.StorageUniqueID">
            <summary>
            Unique ID in persistent storage
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.ExternalReferences.AssetCacheBuilder">
            <summary>
            Asset cache builder class
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.ExternalReferences.AssetCacheBuilder.#ctor(IngeniBridge.Core.Storage.StorageAccessor)">
            <summary>
            Constructor
            </summary>
            <param name="accessor">The accessor containg the IB DB</param>
        </member>
        <member name="T:IngeniBridge.Core.ExternalReferences.AssetCacheBuilder.HandleAbsentReferencedAsset">
            <summary>
            Notification to indicate a missing asset being externally referenced
            </summary>
            <param name="Node">The asset node</param>
            <param name="LinkToEntityName">The link to entity property name from the asset</param>
            <param name="ReferencedObject">The actually referenced asset object</param>
        </member>
        <member name="M:IngeniBridge.Core.ExternalReferences.AssetCacheBuilder.ProcessTree(IngeniBridge.Core.ExternalReferences.AssetCacheBuilder.HandleAbsentReferencedAsset)">
            <summary>
            This method processes a data model tree
            </summary>
            <param name="hara">A callback to be notified of missing externally references assets</param>
        </member>
        <member name="M:IngeniBridge.Core.ExternalReferences.AssetCacheBuilder.FindCachedAssetByHashCode(System.Int32)">
            <summary>
            This method fast finds an asset by hash code
            </summary>
            <param name="HashCode">The asset hash code</param>
            <returns></returns>
        </member>
        <member name="M:IngeniBridge.Core.ExternalReferences.AssetCacheBuilder.FindCachedAssetByPath(System.String)">
            <summary>
            This method fast finds an asset by tree path
            </summary>
            <param name="Path">The asset tree path</param>
            <returns></returns>
        </member>
        <member name="T:IngeniBridge.Core.ExternalReferences.AssetCacheEntry">
            <summary>
            Cache entry class
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.ExternalReferences.AssetCacheEntry.Path">
            <summary>
            The asset path
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.ExternalReferences.AssetCacheEntry.Node">
            <summary>
            The iterated asset node
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.ExternalReferences.AssetCacheEntry.UserData">
            <summary>
            Some data reserved for application use
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.ExternalReferences.AssetCacheEntry.ToString">
            <summary>
            Converts to string
            </summary>
            <returns></returns>
        </member>
        <member name="T:IngeniBridge.Core.Inventory.InventoryHelper">
            <summary>
            This class lets you make flat inventory of the full data model
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Inventory.InventoryHelper.#ctor(IngeniBridge.Core.Storage.StorageAccessor)">
            <summary>
            Constructor
            </summary>
            <param name="accessor">The accessor containg the IB DB</param>
        </member>
        <member name="T:IngeniBridge.Core.Inventory.InventoryHelper.HandleInventoriedHeader">
            <summary>
            Notifies entity and its headers in the flat inventory
            </summary>
            <param name="Name">Entity name</param>
            <param name="Headers">Header naes</param>
            <returns>false to stop the process, true to continue</returns>
        </member>
        <member name="T:IngeniBridge.Core.Inventory.InventoryHelper.HandleInventoriedLine">
            <summary>
            Notifies of an entity line
            </summary>
            <param name="Name">Entity name</param>
            <param name="Columns">Columns content</param>
            <returns>false to stop the process, true to continue</returns>
        </member>
        <member name="M:IngeniBridge.Core.Inventory.InventoryHelper.Launch(IngeniBridge.Core.Inventory.InventoryHelper.HandleInventoriedHeader,IngeniBridge.Core.Inventory.InventoryHelper.HandleInventoriedLine)">
            <summary>
            This method launches the inventoy
            </summary>
            <param name="Frame">Input frame containg the data model tree</param>
            <param name="hih">Headers notifications, must be provided, <seealso cref="T:IngeniBridge.Core.Inventory.InventoryHelper.HandleInventoriedHeader"/></param>
            <param name="hil">Lines content notifications, must be provided, <seealso cref="T:IngeniBridge.Core.Inventory.InventoryHelper.HandleInventoriedLine"/></param>
            <returns>false if aborted else true</returns>
        </member>
        <member name="T:IngeniBridge.Core.Diags.TreeChecker">
            <summary>
            This class contains services to check a data model tree, to be used before submitting to the IngeniBridge server
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Diags.TreeChecker.#ctor(IngeniBridge.Core.Storage.StorageAccessor)">
            <summary>
            Constructor
            </summary>
            <param name="accessor">The accessor containg the IB DB</param>
        </member>
        <member name="T:IngeniBridge.Core.Diags.TreeChecker.ErrorMessage">
            <summary>
            Notification of an error in the data model tree
            </summary>
            <param name="message">The actual message</param>
        </member>
        <member name="M:IngeniBridge.Core.Diags.TreeChecker.CheckTree(System.Boolean,IngeniBridge.Core.Diags.TreeChecker.ErrorMessage)">
            <summary>
            This method launches the tree check
            </summary>
            <param name="testdataviz">dataviz must be tested</param>
            <param name="em">Callback to errors, <seealso cref="T:IngeniBridge.Core.Diags.TreeChecker.ErrorMessage"/></param>
        </member>
        <member name="T:IngeniBridge.Core.Diags.Diagnostic">
            <summary>
            This class provides services to make some diagnotics on the data model tree
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Diags.Diagnostic.#ctor(IngeniBridge.Core.Storage.StorageAccessor)">
            <summary>
            Constructor
            </summary>
            <param name="accessor">The accessor containg the IB DB</param>
        </member>
        <member name="T:IngeniBridge.Core.Diags.Diagnostic.HandleDiagnosticAsset">
            <summary>
            
            </summary>
            <param name="assettype"></param>
            <param name="nbassets"></param>
            <param name="nbdatas"></param>
        </member>
        <member name="T:IngeniBridge.Core.Diags.Diagnostic.HandleDiagnosticNomenclature">
            <summary>
            
            </summary>
            <param name="nomenclature"></param>
            <param name="nbentries"></param>
        </member>
        <member name="M:IngeniBridge.Core.Diags.Diagnostic.Diagnose(IngeniBridge.Core.Diags.Diagnostic.HandleDiagnosticAsset,IngeniBridge.Core.Diags.Diagnostic.HandleDiagnosticNomenclature)">
            <summary>
            
            </summary>
            <param name="hda"></param>
            <param name="hdn"></param>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.AttributeMetaDescription">
            <summary>
            This class contains meta information about a property into an entity
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.META_ATTRIBUTE_DESCRIPTION">
            <summary>
            Description field name
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.META_ATTRIBUTE_TMEDDATAEXTERNALREFERENCE">
            <summary>
            Timed Data external reference name
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IsArray">
            <summary>
            Indicates if array
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IsEnum">
            <summary>
            Indicates if enum
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IsExternalReference">
            <summary>
            Indicates if external reference
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IsNomenclature">
            <summary>
            Indicates if nomenclature
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IsDescriptionField">
            <summary>
            Indicates if description field
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IsExternalTimedDataReference">
            <summary>
            Indicates if timed data external reference field
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.DeclaringEntityType">
            <summary>
            Entity declaring this attribute
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.AttributeType">
            <summary>
            Type of the attribute
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.AttributeName">
            <summary>
            Attribute name
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.NameDesc">
            <summary>
            Name description
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.NotToDisplay">
            <summary>
            Indicates if not to display
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.Unit">
            <summary>
            Unit of measure
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.AddFunctionalAxisOnBaseClass">
            <summary>
            Indicates if index on base class
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IndexRefOnlyOnTarget">
            <summary>
            Indicates if index only on target
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IndexPropertyOnParents">
            <summary>
            Indicates if a property should be indexed on the parents of the leaf node (in the model, the property propagates on the children nodes) also
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.AddFunctionalAxis">
            <summary>
            Functional axis to add for this attribute
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IndexEntityAttribute">
            <summary>
            Index embedded object's specific attribute
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.IndexAlsoByName">
            <summary>
            Indicates if indexed also on name (Asset and Nomenclature attributes indexed by type by default)
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.DoNotIndexProperty">
            <summary>
            Indicates if property must not be indexed
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.AttributeMetaDescription.ToString">
            <summary>
            Converts to string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.RetrieveValueFromDataName(System.Object,System.String)">
            <summary>
            This method retrieves a property value 
            </summary>
            <param name="objectinstance">Entity instance</param>
            <param name="propertyname">Property name</param>
            <returns>The value</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.RetrieveValuesFromType(System.Object,System.String,System.Boolean,System.String)">
            <summary>
            This method retrieves the properties of specified type
            </summary>
            <param name="objectinstance">Entity instance</param>
            <param name="typename">Type name as a string</param>
            <param name="isarray">Looking for array property ?</param>
            <param name="propertyname">The property name if specified</param>
            <returns></returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.RetrieveCodeValue(System.Object)">
            <summary>
            This method retrieves the code property value from an entity
            </summary>
            <param name="entityinstance">The entity</param>
            <returns>the code value</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.SetCodeValue(System.Object,System.String)">
            <summary>
            This method sets the code value into an entity
            </summary>
            <param name="entityinstance">The entity</param>
            <param name="code">The code to set</param>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.RetrieveLabelValue(System.Object)">
            <summary>
            This method retrieves the label property value from an entity
            </summary>
            <param name="entityinstance">The entity</param>
            <returns>the label value</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.SetLabelValue(System.Object,System.String)">
            <summary>
            This method sets the label value into an entity
            </summary>
            <param name="entityinstance">The entity</param>
            <param name="label">The code to set</param>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.RetrieveStorageUniqueID(System.Object)">
            <summary>
            This method retrieves the storageuniqueid property value from an entity
            </summary>
            <param name="entityinstance"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.SetValueFromDataName(System.Object,System.String,System.Object)">
            <summary>
            This method set a property value 
            </summary>
            <param name="objectinstance">Entity instance</param>
            <param name="propertyname">Property name</param>
            <param name="value">The vaue</param>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleLinkedEntity`1">
            <summary>
            Notifies linked entities from entity
            </summary>
            <typeparam name="ENTITYTYPE">Entity type, applies also to derivated entity types</typeparam>
            <param name="entity"></param>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.ParseLinkedEntities``1(System.Object,IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleLinkedEntity{``0},System.Boolean,System.Boolean)">
            <summary>
            This method parses linked entities
            </summary>
            <typeparam name="ENTITYTYPE">Entity type, applies also to derivated entity types</typeparam>
            <param name="entityinstance">Entity</param>
            <param name="hle">Callback to linked entities, <seealso cref="T:IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleLinkedEntity`1"/></param>
            <param name="withnomenclatures">indicates to return nomenclatures as well</param>
            <param name="withexternalrefs">indicates wether to return external refs as well</param>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.ParseLinkedEntities(System.Object,IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleLinkedEntity{System.Object},System.Boolean,System.Boolean)">
            <summary>
            This method parses all linked entities (Asset and Nomenclature)
            </summary>
            <param name="entityinstance">Entity</param>
            <param name="hle">Callback to linked entities, <seealso cref="T:IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleLinkedEntity`1"/></param>
            <param name="withnomenclatures">indicates to return nomenclatures as well</param>
            <param name="withexternalrefs">indicates wether to return external refs as well</param>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleProperty">
            <summary>
            Notifies properties values
            </summary>
            <param name="property">Property name</param>
            <param name="val">Value</param>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.ParsePropertiesAndLinks(System.Object,IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleProperty,System.Boolean)">
            <summary>
            This method parses all nomenclatures and external references if specified
            </summary>
            <param name="entityinstance">Entity</param>
            <param name="hp">Callback to properties, <seealso cref="T:IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleProperty"/></param>
            <param name="externalrefsasproperties">return external references as properties</param>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleAttribute">
            <summary>
            Notifies attributes values
            </summary>
            <param name="attribute">Attribute description</param>
            <param name="val">Value</param>
            <returns></returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityContentHelper.ParseAttributes(System.Object,IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleAttribute,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            This method parses all nomenclatures and external references if specified
            </summary>
            <param name="entityinstance">Entity</param>
            <param name="ha">Callback to attributes, <seealso cref="T:IngeniBridge.Core.MetaHelper.EntityContentHelper.HandleAttribute"/></param>
            <param name="includeexternalentities">return external references as properties</param>
            <param name="includenomenclatures">return nomenclatures as properties</param>
            <param name="includeentities">return links to entities as properties</param>
            <param name="includedatas">return datas as properties</param>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.RootAssetAttribute">
            <summary>
            Root entity
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.DisplayNameAttribute">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.Attributes.DisplayNameAttribute.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.Attributes.DisplayNameAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.ExternalReferenceAttribute">
            <summary>
            Property is referencing a foreign entity into the data model tree
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.AddFunctionalAxisOnBaseClassAttribute">
            <summary>
            Add functional axis on base class
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.AddFunctionalAxisAttribute">
            <summary>
            Add functional axis
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.Attributes.AddFunctionalAxisAttribute.Name">
            <summary>
            
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.Attributes.AddFunctionalAxisAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.IndexRefOnlyOnTargetAttribute">
            <summary>
            Index property only on target node
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.UnitAttribute">
            <summary>
            Unit attribute for data
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.Attributes.UnitAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="unit"></param>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.Attributes.UnitAttribute.Unit">
            <summary>
            
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.NotToDisplayAttribute">
            <summary>
            Flag to indicated not to display property
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.DoNotIndexEntityAttribute">
            <summary>
            Flag to deactivate indexation on this entity
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.DoNotIndexPropertyAttribute">
            <summary>
            This flag indicates if the property should be ignored as a functional axis
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.IndexPropertyOnParentsAttribute">
            <summary>
            This flag indicates if a property should be indexed on the parents of the leaf node (in the model, the property propagates on the children nodes) also
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.IndexEntityAttributeAttribute">
            <summary>
            This flag indicates if an embedded entity attribute should be indexed on the container, used to enrich index with more info
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.Attributes.IndexEntityAttributeAttribute.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="attributename"></param>
            <param name="functionalaxisname"></param>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.Attributes.IndexEntityAttributeAttribute.AttributeName">
            <summary>
            The attribute name withinh the contained Nomenclature or Entity wich must be external or Nomenclature
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.Attributes.IndexEntityAttributeAttribute.FunctionalAxisName">
            <summary>
            Functional axis name, optional
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.Attributes.IndexAlsoByNameAttribute">
            <summary>
            This flag indicates if an Asset or Nomenclature attribute should also be index on its name (by default indexed on its type)
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.MetaHelper">
            <summary>
            This class contains meta data servicesfor the data model 
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.MetaHelper.PROPERTY_CODE_NAME">
            <summary>
            Code property name
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.MetaHelper.PROPERTY_LABEL_NAME">
            <summary>
            Label property name
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.MetaHelper.PROPERTY_STORAGEUNIQUEID_NAME">
            <summary>
            StorageUniqueID property name
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.MetaHelper.PROPERTY_DATAS_NAME">
            <summary>
            Datas property name
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.MetaHelper.DatavizIndexHelper">
            <summary>
            returns a Dataviz index helper if implemented in the metamodel
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.IsIngeniBridgeType(System.Type)">
            <summary>
            This method indicate if a type is IngeniBridge compliant
            </summary>
            <param name="t">The type</param>
            <returns>true if yes else no</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.GetMetaDataFromType(System.Type)">
            <summary>
            This method returns meta data describing an entity type
            </summary>
            <param name="t">The type</param>
            <returns>Meta data information</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.LoadMetaDataForEntityModeling">
            <summary>
            This method loads all meta data information from a data model assembly
            </summary>
            <returns>Meta data information</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.RetrieveFirstPropertyFromType(System.Object,System.Type)">
            <summary>
            This method retrieves the first property inside an object instance compatible with the type
            </summary>
            <param name="objectinstance">the object instance</param>
            <param name="type">the type to find the compatible property</param>
            <returns>the property name if found else null</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.RetrieveAllPropertiesFromType(System.Object,System.Type)">
            <summary>
            This method retrieves all the properties inside an object instance compatible with the type
            </summary>
            <param name="objectinstance">the object instance</param>
            <param name="type">the type to find the compatible property</param>
            <returns>the properties found</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.GetMetaDataFromName(System.String)">
            <summary>
            This method returns meta data describing an entity type
            </summary>
            <param name="EntityName">The entity type name</param>
            <returns>>Meta data information</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.GetMetaData">
            <summary>
            This method retrieves all meta data for the model
            </summary>
            <returns>a list of meta data</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.GetMetaData``1(System.Boolean)">
            <summary>
            This method retrieves all meta data for the model
            </summary>
            <returns>a list of meta data</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.GetEnumTypes">
            <summary>
            This method retrieves the enum types in the model
            </summary>
            <returns></returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.GetInheritanceMetaData">
            <summary>
            This method builds a tree of inheritance meta data
            </summary>
            <returns>>a list of meta data</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.GetTypes">
            <summary>
            This method retrieves the types list in the model meta information
            </summary>
            <returns>Types</returns>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.MetaHelper.GetTypes``1">
            <summary>
            This method retrieves the types list in the model meta information
            </summary>
            <returns>Types</returns>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.EntityMetaDescription">
            <summary>
            This class represents the meta information on an IngeniBridge entity
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityKindEnum">
            <summary>
            Entity kind
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityKindEnum.TimedData">
            <summary>
            Data, <seealso cref="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityKindEnum.TimedData"/>
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityKindEnum.Asset">
            <summary>
            Asset, <seealso cref="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityKindEnum.Asset"/>
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityKindEnum.Nomenclature">
            <summary>
            Nomenclature, <seealso cref="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityKindEnum.Nomenclature"/>
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.IsRoot">
            <summary>
            Indicates if entity is root in the data model
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityKind">
            <summary>
            Entity kind
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityType">
            <summary>
            .Net type of the entity
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.IsAbstract">
            <summary>
            Indicates if entity is abstract (not instanciable)
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.CodeProperty">
            <summary>
            Attribute meta information for code
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.LabelProperty">
            <summary>
            Attribute meta information for label
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.DoNotIndexEntity">
            <summary>
            Indicates if entity must not be indexed
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.EntityMetaDescription.Properties">
            <summary>
            Properties in the entity
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.EntityMetaDescription.LinksToEntity">
            <summary>
            Entities linked with the entity
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.EntityMetaDescription.LinksToNomenclature">
            <summary>
            Nomenclatures linked with the entity
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityAndNomenclatureLinks">
            <summary>
            Merged link of entities and nomenclatures
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.EntityMetaDescription.AllLinks">
            <summary>
            Link to all data
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.EntityMetaDescription.AllLinksButTimedDatas">
            <summary>
            Link to all data but timed datas
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.EntityMetaDescription.ExternalLinksToEntities">
            <summary>
            Link to only external entities
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.MetaHelper.EntityMetaDescription.BaseEntityType">
            <summary>
            Type of base entity
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityDisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.MetaHelper.EntityMetaDescription.EntityName">
            <summary>
            Entity name
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.MetaHelper.EntityMetaDescription.ToString">
            <summary>
            Converts to string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="T:IngeniBridge.Core.Mining.ContextedAssetSerializer">
            <summary>
            This class contains services to serialize and deseiralize results form the webservice
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Mining.ContextedAssetSerializer.GetKnownTypes(IngeniBridge.Core.MetaHelper.MetaHelper)">
            <summary>
            This method returns known types sed for serialization
            </summary>
            <param name="helper">Helper</param>
            <returns>The types</returns>
        </member>
        <member name="M:IngeniBridge.Core.Mining.ContextedAssetSerializer.SerializeContextedAsset(IngeniBridge.Core.Service.ContextedAsset)">
            <summary>
            This method is used to serialize a contexted asset
            </summary>
            <param name="contextedasset">Contexted asset</param>
            <returns>The stream string</returns>
        </member>
        <member name="M:IngeniBridge.Core.Mining.ContextedAssetSerializer.SerializeContextedData(IngeniBridge.Core.Service.ContextedData)">
            <summary>
            This method is used to serialize a contexted data
            </summary>
            <param name="contexteddata">Contexted data</param>
            <returns>The stream string</returns>
        </member>
        <member name="M:IngeniBridge.Core.Mining.ContextedAssetSerializer.SerializeDatavizData(IngeniBridge.Core.Service.DatavizData)">
            <summary>
            This method is used to serialize a dataviz data
            </summary>
            <param name="dvd">dataviz data</param>
            <returns>The stream string</returns>
        </member>
        <member name="M:IngeniBridge.Core.Mining.ContextedAssetSerializer.DeserializeContextedAssetFromString(System.String)">
            <summary>
            This method deserializes a contexted asset
            </summary>
            <param name="ser">The stream string</param>
            <returns>The contexted asset</returns>
        </member>
        <member name="M:IngeniBridge.Core.Mining.ContextedAssetSerializer.DeserializeContextedAssetsFromString(System.String)">
            <summary>
            This method deserializes a multiple contexted asset (from the Ingenibridge REST server)
            </summary>
            <param name="ser">The stream string</param>
            <returns>The contexted assets</returns>
        </member>
        <member name="M:IngeniBridge.Core.Mining.ContextedAssetSerializer.DeserializeContextedDataFromString(System.String)">
            <summary>
            This method deserializes a contexted data
            </summary>
            <param name="ser">The stream string</param>
            <returns>The contexted data</returns>
        </member>
        <member name="M:IngeniBridge.Core.Mining.ContextedAssetSerializer.DeserializeContextedDatasFromString(System.String)">
            <summary>
            This method deserializes a multiple contexted data (from the Ingenibridge REST server)
            </summary>
            <param name="ser">The stream string</param>
            <returns>The contexted datas</returns>
        </member>
        <member name="T:IngeniBridge.Core.Mining.IDatavizIndexHelper">
            <summary>
            This interface is the Dataviz index contract
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Mining.IDatavizIndexHelper.IndexNode(IngeniBridge.Core.Storage.StorageAccessor,System.String,System.Object)">
            <summary>
            Implement this method to index a node
            </summary>
            <param name="accessor">the storage accessor</param>
            <param name="PathInTree">the path of the actual node</param>
            <param name="node">the iterated node</param>
            <returns>the actual text to be searched through rest calls</returns>
        </member>
        <member name="T:IngeniBridge.Core.Serialization.EntitySerializer">
            <summary>
            This class provides services for serialization
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Serialization.EntitySerializer.ParameterizeJsonSetting(Newtonsoft.Json.JsonSerializerSettings)">
            <summary>
            This method parameterizes the json serializer
            </summary>
            <param name="settings"></param>
        </member>
        <member name="T:IngeniBridge.Core.Service.ContextedAsset">
            <summary>
            Contexted asset returned by the web service
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.Service.ContextedAsset.Parents">
            <summary>
            The parents in reverse order, index 0 is the immediate parent
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.Service.ContextedAsset.Asset">
            <summary>
            The asset found
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.Service.DatavizData">
            <summary>
            DatavizData data returned by the web service
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.Service.ContextedData">
            <summary>
            Contexted data returned by the web service
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.Service.ContextedData.Parents">
            <summary>
            The parents in reverse order, index 0 is the immediate parent
            </summary>
        </member>
        <member name="F:IngeniBridge.Core.Service.ContextedData.Data">
            <summary>
            The data found
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.StagingData.AssemblyResolver">
            <summary>
            This is the assembly resolver in case to stream the datamodel on the client
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.StagingData.AssemblyResolver.Inintialize">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.StagingData.AssemblyResolver.AddAssembly(System.Reflection.Assembly)">
            <summary>
            Call tis method just after calling Load agqinst the streamed data model
            </summary>
            <param name="assembly"></param>
        </member>
        <member name="T:IngeniBridge.Core.StagingData.DataModelVersion">
            <summary>
            This class provides complete versioning for a data model tree
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.StagingData.DataModelVersion.Name">
            <summary>
            Data model name
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.StagingData.DataModelVersion.Build">
            <summary>
            Build version
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.StagingData.DataModelVersion.Major">
            <summary>
            Major version
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.StagingData.DataModelVersion.MajorRevision">
            <summary>
            MajorREvision version
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.StagingData.DataModelVersion.Minor">
            <summary>
            Minor version
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.StagingData.DataModelVersion.MinorRevision">
            <summary>
            MinorRevision version
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.StagingData.DataModelVersion.Revision">
            <summary>
            Revision version
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.StagingData.DataModelVersion.Generated">
            <summary>
            The date the data model was generated
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.StagingData.DataModelVersion.Equals(System.Object)">
            <summary>
            Performs Equal comparison
            </summary>
            <param name="obj">object to compare</param>
            <returns></returns>
        </member>
        <member name="M:IngeniBridge.Core.StagingData.DataModelVersion.ToString">
            <summary>
            Converts to string
            </summary>
            <returns>the string</returns>
        </member>
        <member name="T:IngeniBridge.Core.Storage.StorageFormatter">
            <summary>
            This class provides for asset and timeddata object storage
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.Storage.StorageAccessor.HandleNode`1">
            <summary>
            Notifies a node in the tree
            </summary>
            <typeparam name="NODETYPE">Node type, applies also to derivated entites</typeparam>
            <param name="inode">The node</param>
            <returns>false to stop, true to continue</returns>
        </member>
        <member name="P:IngeniBridge.Core.Storage.StorageAccessor.RootAsset">
            <summary>
            The root node of the tree
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Storage.StorageAccessor.GetNbChildEntities``1(System.UInt64)">
            <summary>
            This function returns the immediate children number 
            </summary>
            <typeparam name="NODETYPE">Node type to filter</typeparam>
            <param name="StorageUniqueID">Unique storage ID</param>
            <returns></returns>
        </member>
        <member name="T:IngeniBridge.Core.TimedData">
            <summary>
            This class represents a timed data (Data histrian database timed value)
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.TimedData.Code">
            <summary>
            The data code
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.TimedData.Label">
            <summary>
            The data label
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.TimedData.Description">
            <summary>
            The data description
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.TimedData.TimeSeriesExternalReference">
            <summary>
            The technical reference or key to the actual timed data contained into the external TSBD (Time Series Database) System
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.TimedData.BeginValidity">
            <summary>
            The begin validity date
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.TimedData.EndValidity">
            <summary>
            The end validity date
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.TimedData.ToString">
            <summary>
            Converts to string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="M:IngeniBridge.Core.TimedData.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.TimedData.HistoryTrackingCode">
            <summary>
            Correlation code to track the object history
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.TimedData.StorageUniqueID">
            <summary>
            Unique ID in persistent storage
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.TimedData.GetTimeSeriesExternalReference">
            <summary>
            Overload this property to give a single Code when using several TSDB technologies
            </summary>
            <returns>The single TimedData Code</returns>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.Base">
            <summary>
            Base of exceptions
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.Base.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.Base.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.BadRootObjectFormat">
            <summary>
            The root object in the frame is not an compliant type
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.BadRootObjectFormat.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="typ"></param>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.ObjectMustBeTaggedRoot">
            <summary>
            The root object must be tagged root
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.ObjectMustBeTaggedRoot.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="typ"></param>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.BadDataModel">
            <summary>
            The data model do not match
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.BadDataModel.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="datamodelassembly"></param>
            <param name="assembly"></param>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.BadAssembly">
            <summary>
            The data model assembly contains no IngeniBridge data model
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.BadAssembly.#ctor(System.Reflection.Assembly)">
            <summary>
            
            </summary>
            <param name="asm"></param>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.ExternalReferencedObjectsNotDeclared">
            <summary>
            A referenced asset was not declared in the tree
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.ExternalReferencedObjectsNotDeclared.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="nberrors"></param>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.TreeContainsErrors">
            <summary>
            The data model tree contains errors
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.TreeContainsErrors.#ctor(System.Int32)">
            <summary>
            
            </summary>
            <param name="nberrors"></param>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.DataModelAssemblyCannotBeNull">
            <summary>
            The data model assembly must be provided
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.DataModelAssemblyCannotBeNull.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.MinorRevisionVersionCannotBeZero">
            <summary>
            Minor revision cannot be 0
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.MinorRevisionVersionCannotBeZero.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.DataModelException">
            <summary>
            Exception related to the data model definition
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.DataModelException.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.Exceptions.RequestCheckerException">
            <summary>
            Exception related to request checking
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Exceptions.RequestCheckerException.#ctor(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.Nomenclature">
            <summary>
            This class represents a Nomenclature into an IngeniBridge tree
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Nomenclature.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Nomenclature.Label">
            <summary>
            Label
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Nomenclature.BeginValidity">
            <summary>
            The begin validity date
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Nomenclature.EndValidity">
            <summary>
            The end validity date
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Nomenclature.ToString">
            <summary>
            Converts to string
            </summary>
            <returns>The string</returns>
        </member>
        <member name="P:IngeniBridge.Core.Nomenclature.HistoryTrackingCode">
            <summary>
            Correlation code to track the object history
            </summary>
        </member>
        <member name="P:IngeniBridge.Core.Nomenclature.StorageUniqueID">
            <summary>
            Unique ID in persistent storage
            </summary>
        </member>
        <member name="T:IngeniBridge.Core.Util.FileDater">
            <summary>
            This class timestamps a file name
            </summary>
        </member>
        <member name="M:IngeniBridge.Core.Util.FileDater.SetFileNameDateTime(System.String,System.Boolean)">
            <summary>
            This method timestamps a file name
            </summary>
            <param name="filename">File name to be time stamped</param>
            <param name="withoutdir">Flag to remove path from file path</param>
            <returns>The actual time stamped file name</returns>
        </member>
    </members>
</doc>
